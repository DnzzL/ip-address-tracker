{"version":3,"file":"static/js/275.b72745c5.chunk.js","mappings":"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","sources":["assets/images/icon-arrow.svg","components/Input/Input.tsx","assets/images/icon-location.svg","components/Map/Map.tsx","shared/constants.ts","components/ResultCard/ResultCard.tsx","pages/Tracker/Tracker.tsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 11,\n    height: 14,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#FFF\",\n    strokeWidth: 3,\n    d: \"M2 1l6 6-6 6\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconArrow);\nexport default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee3602d5aa14a2dba69e9fb7a0.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport \"./Input.css\";\nimport iconArrow from \"../../assets/images/icon-arrow.svg\";\n\ninterface InputProps {\n  inputValue: string;\n  placeholder: string;\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nconst InputContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst TextInput = styled.input`\n  border: none;\n  border-radius: 10px 0 0 10px;\n  padding: 0.5rem 1.2rem;\n  font-size: 1rem;\n  width: 100%;\n  cursor: pointer;\n`;\nconst Button = styled.button`\n  border: none;\n  border-radius: 0 10px 10px 0;\n  padding: 0.8rem 1rem;\n  background-color: #000;\n  cursor: pointer;\n`;\n\nconst Input: FC<InputProps> = (props) => (\n  <InputContainer>\n    <TextInput\n      placeholder={props.placeholder}\n      value={props.inputValue}\n      onChange={props.onInputChange}\n    ></TextInput>\n    <Button onClick={props.onClick}>\n      <img src={iconArrow} alt=\"arrow icon\"></img>\n    </Button>\n  </InputContainer>\n);\n\nexport default Input;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconLocation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 46,\n    height: 56,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M39.263 7.673c8.897 8.812 8.966 23.168.153 32.065l-.153.153L23 56 6.737 39.89C-2.16 31.079-2.23 16.723 6.584 7.826l.153-.152c9.007-8.922 23.52-8.922 32.526 0zM23 14.435c-5.211 0-9.436 4.185-9.436 9.347S17.79 33.128 23 33.128s9.436-4.184 9.436-9.346S28.21 14.435 23 14.435z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconLocation);\nexport default __webpack_public_path__ + \"static/media/icon-location.7e6459d2a9278295ae782e100965be4b.svg\";\nexport { ForwardRef as ReactComponent };","import L, { LatLngExpression } from \"leaflet\";\nimport { FC, Ref, useMemo, useState } from \"react\";\nimport { MapContainer, Marker, Popup, TileLayer, useMap } from \"react-leaflet\";\nimport \"./Map.css\";\nimport locationIcon from \"../../assets/images/icon-location.svg\";\n\ninterface MapProps {\n  lat: number;\n  lng: number;\n}\n\nconst Map: FC<MapProps> = (props) => {\n  const [map, setMap] = useState<any>();\n  const position = [props.lat, props.lng] as LatLngExpression;\n\n  function ChangeView({ center, zoom }: any) {\n    const map = useMap();\n    map.setView(center, zoom);\n    return null;\n  }\n\n  const displayMap = useMemo(() => {\n    const markerIcon = L.icon({\n      iconUrl: locationIcon,\n      iconRetinaUrl: locationIcon,\n      iconSize: [30, 40],\n    });\n\n    return (\n      <MapContainer\n        center={position}\n        zoom={17}\n        scrollWheelZoom={false}\n        ref={setMap}\n        style={{ height: \"70vh\", width: \"100%\", zIndex: -1 }}\n      >\n        <ChangeView center={position} zoom={17} />\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={position} icon={markerIcon}></Marker>\n      </MapContainer>\n    );\n  }, [position]);\n\n  return <>{displayMap}</>;\n};\nexport default Map;\n","export const screenSize = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  laptop: 1024,\n  laptopL: 1440,\n  desktop: 2560,\n};\n\nexport const device = {\n  mobileS: `(min-width: ${screenSize.mobileS}px)`,\n  mobileM: `(min-width: ${screenSize.mobileM}px)`,\n  mobileL: `(min-width: ${screenSize.mobileL}px)`,\n  tablet: `(min-width: ${screenSize.tablet}px)`,\n  laptop: `(min-width: ${screenSize.laptop}px)`,\n  laptopL: `(min-width: ${screenSize.laptopL}px)`,\n  desktop: `(min-width: ${screenSize.desktop}px)`,\n  desktopL: `(min-width: ${screenSize.desktop}px)`,\n};\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport useBreakpoint from \"use-breakpoint\";\nimport { device, screenSize } from \"../../shared/constants\";\nimport \"./ResultCard.css\";\n\ninterface ResultCardProps {\n  items: Object;\n}\n\nconst ResultCardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  gap: 1rem;\n  border-radius: 10px;\n  background-color: white;\n  padding: 1.5rem 2rem;\n  min-height: 6rem;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n\n  @media ${device.tablet} {\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: flex-start;\n    padding: 0.5rem 1rem;\n  }\n`;\n\nconst CategoryResult = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  gap: 0.5rem;\n\n  @media ${device.tablet} {\n    justify-content: flex-start;\n    align-items: flex-start;\n    padding: 1.5rem;\n  }\n`;\n\nconst CategoryTitle = styled.p`\n  font-size: 0.6rem;\n  font-weight: 700;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  color: var(--dark-gray);\n  margin: 0;\n`;\n\nconst CategoryValue = styled.p`\n  font-size: 1.2rem;\n  font-weight: 500;\n  color: var(--very-dark-gray);\n  margin: 0;\n\n  @media ${device.tablet} {\n    font-size: 1.3rem;\n  }\n`;\n\nconst CategorySeparator = styled.div`\n  display: inline-block;\n  border-left: 1px solid #ccc;\n  height: 3rem;\n  align-self: center;\n`;\n\nconst ResultCard: FC<ResultCardProps> = (props) => {\n  const { minWidth } = useBreakpoint(screenSize);\n\n  return (\n    <ResultCardWrapper>\n      {Object.entries(props.items).map(([key, value]) => (\n        <>\n          {minWidth &&\n          minWidth > screenSize.mobileL &&\n          key !== Object.keys(props.items)[0] ? (\n            <CategorySeparator></CategorySeparator>\n          ) : null}\n          <CategoryResult key={key}>\n            <CategoryTitle>{key}</CategoryTitle>\n            <CategoryValue>{value}</CategoryValue>\n          </CategoryResult>\n        </>\n      ))}\n    </ResultCardWrapper>\n  );\n};\n\nexport default ResultCard;\n","import axios from \"axios\";\nimport { FC, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport backgroundPattern from \"../../assets/images/pattern-bg.png\";\nimport Input from \"../../components/Input/Input\";\nimport Map from \"../../components/Map/Map\";\nimport ResultCard from \"../../components/ResultCard/ResultCard\";\nimport { device } from \"../../shared/constants\";\nimport { IpifyResponse } from \"../../shared/interfaces\";\nimport \"./Tracker.css\";\n\ninterface TrackerProps {}\n\nconst TrackerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  position: relative;\n`;\n\nconst BackgroundWrapper = styled.div`\n  overflow: hidden;\n  height: 30vh;\n  max-width: 100%;\n`;\n\nconst BackgroundImage = styled.img`\n  height: 100%;\n`;\n\nconst TrackerTitle = styled.h1`\n  font-size: 1.5rem;\n  font-weight: 500;\n  color: white;\n  position: absolute;\n  top: 1vh;\n\n  @media ${device.tablet} {\n    top: 3vh;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  max-height: 50px;\n  position: absolute;\n  top: 6vh;\n  width: 90%;\n  margin: 0 auto;\n  padding: 1rem 1.5rem;\n\n  @media ${device.tablet} {\n    top: 10vh;\n    max-width: 30rem;\n  }\n`;\n\nconst ResultCardWrapper = styled.div`\n  padding: 0.5rem 1.5rem;\n  position: absolute;\n  top: 15vh;\n  width: 90%;\n\n  @media ${device.tablet} {\n    max-width: 60rem;\n    top: 20vh;\n  }\n`;\n\nconst Tracker: FC<TrackerProps> = () => {\n  const IPIFY_URL = \"https://geo.ipify.org/api/v2/country,city\";\n  const inputPlaceholder = \"Search for any IP address or domain\";\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [ip, setIP] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [lat, setLat] = useState<number>();\n  const [lng, setLng] = useState<number>();\n  const [timezone, setTimezone] = useState(\"\");\n  const [isp, setIsp] = useState(\"\");\n  const [isFetching, setFetching] = useState(false);\n\n  const fetchGeolocationAPI = async (ipAddress: string = \"\") => {\n    try {\n      const params = ipAddress\n        ? { apiKey: `${process.env[\"REACT_APP_IPIFY_API_KEY\"]}`, ipAddress }\n        : { apiKey: `${process.env[\"REACT_APP_IPIFY_API_KEY\"]}` };\n      const response = (\n        await axios.get(IPIFY_URL, {\n          params,\n        })\n      ).data as IpifyResponse;\n      setIP(response.ip);\n      setCity(response.location.city);\n      setLat(response.location.lat);\n      setLng(response.location.lng);\n      setTimezone(response.location.timezone);\n      setIsp(response.isp);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    fetchGeolocationAPI();\n  }, [inputValue]);\n\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const onClick = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n    setFetching(true);\n    await fetchGeolocationAPI(inputValue);\n    setFetching(false);\n  };\n\n  return (\n    <TrackerWrapper>\n      <BackgroundWrapper>\n        <BackgroundImage\n          src={backgroundPattern}\n          alt=\"background pattern\"\n        ></BackgroundImage>\n      </BackgroundWrapper>\n      <TrackerTitle>IP Address Tracker</TrackerTitle>\n      <InputWrapper>\n        <Input\n          placeholder={inputPlaceholder}\n          inputValue={inputValue}\n          onInputChange={onInputChange}\n          onClick={onClick}\n        ></Input>\n      </InputWrapper>\n      <ResultCardWrapper>\n        <ResultCard\n          items={{ \"ip address\": ip, location: city, timezone, isp }}\n        ></ResultCard>\n      </ResultCardWrapper>\n      {lat && lng ? <Map lat={lat} lng={lng}></Map> : null}\n    </TrackerWrapper>\n  );\n};\n\nexport default Tracker;\n"],"names":["InputContainer","styled","TextInput","Button","props","placeholder","value","inputValue","onChange","onInputChange","onClick","src","iconArrow","alt","useState","setMap","position","lat","lng","ChangeView","center","zoom","useMap","setView","displayMap","useMemo","markerIcon","L","iconUrl","locationIcon","iconRetinaUrl","iconSize","MapContainer","scrollWheelZoom","ref","style","height","width","zIndex","TileLayer","attribution","url","Marker","icon","screenSize","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","device","desktopL","ResultCardWrapper","CategoryResult","CategoryTitle","CategoryValue","CategorySeparator","minWidth","useBreakpoint","Object","entries","items","map","key","keys","TrackerWrapper","BackgroundWrapper","BackgroundImage","TrackerTitle","InputWrapper","IPIFY_URL","setInputValue","ip","setIP","city","setCity","setLat","setLng","timezone","setTimezone","isp","setIsp","setFetching","fetchGeolocationAPI","ipAddress","params","apiKey","process","axios","response","data","location","console","log","useEffect","e","preventDefault","backgroundPattern","target"],"sourceRoot":""}